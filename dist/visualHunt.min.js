!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).VisualHunt=t()}(this,(function(){"use strict";class e{constructor({state:e,container:t,slideCount:s,slideDurationSeconds:i,canvas:a,session:n}){this.state=e,this.container=t,this.enabled=e.enableSlideCounter,this.slideCount=s,this.canvas=a,this.slideDurationSeconds=i,this.session=n,0==this.enabled&&(this.container.style.display="none")}resize(){this.container.style.width=this.canvas.actualWidth/this.state.device.pixelDensity+"px"}render(){this.clear(),this.renderItems(),this.container.style.width=this.canvas.actualWidth/this.state.device.pixelDensity+"px",this.container.style.setProperty("--slide-duration",this.slideDurationSeconds+"s")}clear(){this.container.innerHTML=""}renderItems(){this.content=Array.from({length:this.slideCount},((e,t)=>{const s=document.createElement("div");return s.className="marker",s.innerHTML="",s.dataset.slideIndex=t+1,s})),this.container.append(...this.content)}update(){let e=this.container.querySelector(`[data-slide-index="${this.state.currentSlideIndex+1}"]`);this.container.querySelectorAll(".active").forEach((function(e){e.classList.remove("active")})),e.classList.add("active")}}class t{constructor({backgrounds:e,targets:t,slideCount:s,searchImages:i,tgGroupingField:a,bgGroupingField:n}){this.id=Date.now()+"-"+Math.floor(1e4*Math.random()),this.events=[],this.totalTiming=null,this.backgrounds=e,this.targets=t,this.searchImages=i,this.device={colorDepth:screen.colorDepth,forcedColors:window.matchMedia("(forced-colors: active)").matches,isDarkMode:window.matchMedia("(prefers-color-scheme: dark)").matches,IsTouchDevice:"ontouchstart"in window||navigator.maxTouchPoints>0,initialOrientation:window.screen.orientation?window.screen.orientation.type:"unknown",initialPixelDensity:window.devicePixelRatio||1,initialScreenWidth:window.innerWidth,initialScreenHeight:window.innerHeight,userAgent:navigator.userAgent},this.results=Array.from({length:s},((e,t)=>({session:this.id,slideIndex:t,backgroundFilename:null,[`background_${n}`]:null,backgroundIndex:null,targetFilename:null,[`target_${a}`]:null,targetIndex:null,originalTargetX:null,originalTargetY:null,targetRotation:null,startTimestamp:null,endTimestamp:null,timing:null,hitTarget:!1}))),this.device.initialScreenAspectRatio=this.device.initialScreenWidth/this.device.initialScreenHeight}}class s{constructor({config:e,session:t,containerId:s,submitEvent:i,texts:a,lang:n,apiServicePath:r}){this.config=e,this.session=t,this.container=document.getElementById(s),this.texts=a,this.lang=n,this.formElement=null,this.apiServicePath=r,this.submitEvent=i,this.formFields=[],this.buildForm(),this.appendForm(),this.config.requireConfirmation?this.appendSubmitButton():this.watchFormCompletion()}buildForm(){this.formElement=document.createElement("form"),this.config.fields.forEach((e=>{const t=document.createElement("div");t.classList.add("survey-field");const s=document.createElement("legend");s.textContent=e.description[this.lang],s.classList.add("h2"),t.appendChild(s),"radio"===e.type&&e.options.forEach((s=>{const i=document.createElement("div");i.classList.add("form-check");document.createElement("div").classList.add("form-check");const a=document.createElement("input");a.classList.add("form-check-input"),a.type="radio",a.name=e.id,a.value=s.value;const n=document.createElement("label");n.classList.add("form-check-label"),n.htmlFor=e.id,n.textContent=s.label[[this.lang]],i.appendChild(a),i.appendChild(n),t.appendChild(i),this.formFields.push(a)})),"radio-button"===e.type&&e.options.forEach((s=>{const i=document.createElement("div");i.classList.add("form-check"),i.classList.add("form-radio-button-check");document.createElement("div").classList.add("form-check");const a=document.createElement("input");a.classList.add("form-check-input"),a.classList.add("radio-button"),a.type="radio",a.name=e.id,a.value=s.value;const n=document.createElement("label");n.classList.add("form-check-label"),n.htmlFor=e.id,n.textContent=s.label[[this.lang]],i.appendChild(a),i.appendChild(n),t.appendChild(i),this.formFields.push(a)})),this.formElement.appendChild(t)}))}appendForm(){this.container.innerHTML="",this.container.appendChild(this.formElement),this.data=new FormData(this.formElement)}appendSubmitButton(){this.submitButton=document.createElement("button"),this.submitButton.setAttribute("id","surveySubmitButton"),this.submitButton.classList.add("btn"),this.submitButton.classList.add("btn-primary"),this.submitButton.classList.add("align-self-start"),this.submitButton.textContent=this.texts.surveySubmitButton[this.lang],this.container.appendChild(this.submitButton),this.submitButton.addEventListener("click",(()=>{this.submit(this.apiServicePath),window.dispatchEvent(this.submitEvent)}))}async watchFormCompletion(){const e=new Set;let t=!1;this.formFields.forEach((s=>{s.name&&e.add(s.name),s.addEventListener("change",function(s){t=!0,e.forEach((e=>{const s=this.formFields.filter((t=>t.name===e));let i=!1;s.forEach((e=>{"radio"===e.type?e.checked&&(i=!0):"radio"!==e.type&&""!==e.value.trim()&&(i=!0)})),i||(t=!1)})),t&&(this.formFields.forEach((e=>{e.style.pointerEvents="none"})),setTimeout((()=>{this.submit(this.apiServicePath),window.dispatchEvent(this.submitEvent)}),500))}.bind(this))}))}updateData(){this.formElement.querySelectorAll("input, select, textarea").forEach((e=>{"radio"===e.type?e.checked&&this.data.append(e.name,e.value):this.data.append(e.name,e.value)}))}getFormattedDate(){const e=new Date;return`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")} ${String(e.getHours()).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")}:${String(e.getSeconds()).padStart(2,"0")}`}async submit(e){this.updateData();const t=[Array.from(this.data.entries()).map((([e,t])=>({key:e,value:t}))).reduce(((e,t)=>(e[t.key]=t.value,e)),{})];for(let e in t[0])t[0].hasOwnProperty(e)&&(this.session["survey_"+e]=t[0][e]);t[0].timestamp=this.getFormattedDate(),t[0].session=this.session.id;const s={type:"survey",data:this.preProcessData(t)},i=JSON.stringify(s);try{const t=await fetch(e,{method:"POST",body:i});if(!t.ok)throw new Error("Failed to submit survey");{console.log(t);const e=await t.json();console.log(e)}}catch(e){console.error("Error submitting survey:",e)}}preProcessData(e){return Array.isArray(e)?e.map((e=>this.preProcessData(e))):null!==e&&"object"==typeof e?Object.keys(e).reduce(((t,s)=>(t[s]=this.preProcessData(e[s]),t)),{}):null===e?"null":!1===e?"false":""===e?"":e}}return class{constructor(e){this.requiredConfigParameters=["api.endpoints.post","opening.element","userConsentButton","survey.enable","instructions.enable","gameplay.element","gameplay.startGameButton","gameplay.backToStartButton","gameplay.config.matchGroups","gameplay.config.slides.count","gameplay.config.slides.durationSeconds","gameplay.config.slides.preparationTimeSeconds","gameplay.config.slides.showTargetPosition.enable","gameplay.config.slides.showTargetPosition.timeSeconds","gameplay.config.backgrounds.imagesDir","gameplay.config.backgrounds.data","gameplay.config.backgrounds.groupingField","gameplay.config.targets.imagesDir","gameplay.config.targets.data","gameplay.config.targets.groupingField","gameplay.config.targets.size","gameplay.config.targets.detectionRadius","gameplay.canvas.element","gameplay.canvas.width","gameplay.canvas.height","gameplay.slideCounter.enable","gameplay.slideCounter.element","results.element","results.stats.element","results.stats.mainResult.element","results.stats.mainResult.path","results.stats.slides.hitRatio","results.stats.slides.totalTiming","results.stats.hits.totalNumberRelative","results.stats.hits.averageTiming","results.stats.hits.fastestHit","results.stats.backgrounds.smallestAverageHitTimingGroup","results.stats.backgrounds.mostFoundGroup","results.stats.targets.smallestAverageHitTimingGroup"];e=this.deepMerge({content:{defaultLang:"en",texts:{gameLangs:{en:"English"},gameTitle:{en:"Game title"},openingHeading:{en:"Game opening heading"},openingIntro:{en:"<p>Game introductory text</p>"},goToGameButton:{en:"Go to game"},surveySubmitButton:{en:"Start game"},learnMoreButton:{en:"Learn more"},userConsentButton:{en:"I agree"},startGameInteraction:{en:"Click to start the game."},modalFooter:{en:"<p>By clicking “I agree” you're consenting to your click-data and device screen data (such as screen dimensions and orientation) being used for our research. No personal identifying data will be collected, and you're free to stop at any time.</p>"},backToStartButton:{en:"Back to start"},loadingText:{en:"Loading"}}},theme:{color:{targetHit:"#55ff00",targetMiss:"#ffffff"},sound:{enable:!1}},survey:{enable:!1},instructions:{enable:!1,element:"instructionsScreen",searchImages:{enable:!1,canvas:{width:600,height:"60vh"},columns:6}},gameplay:{element:"gameplayScreen",startGameButton:"searchImagesCanvas",backToStartButton:"backToStartButton",loadingScreen:{enable:!0},preparationScreen:{enable:!1},config:{matchGroups:!0,slides:{count:42,durationSeconds:.25,preparationTimeSeconds:1,showTargetPosition:{enable:!0,timeSeconds:.75}},backgrounds:{imagesDir:"./assets/img/background",data:"./data/input/background.csv",groupingField:"type",allowDuplicates:!1},targets:{imagesDir:"./assets/img/target",data:"./data/input/target.csv",groupingField:"species",size:75,detectionRadius:37.5,allowDuplicates:!1}},canvas:{element:"gameCanvas",width:960,height:540},slideCounter:{enable:!0,element:"slideCounter"}},results:{element:"resultsScreen",stats:{element:"gameStats",mainResult:{element:"mainResult",path:["slides","hitRatio"]},slides:{hitRatio:!0,totalTiming:!0},hits:{totalNumberRelative:!0,averageTiming:!0,fastestHit:!0},backgrounds:{smallestAverageHitTimingGroup:!0,mostFoundGroup:!1},targets:{smallestAverageHitTimingGroup:!0}}}},e),this.config=e,this.checkRequiredProps(e,this.requiredConfigParameters),document.addEventListener("DOMContentLoaded",function(){let t=[e.gameplay.config.backgrounds.data,e.gameplay.config.targets.data],i=t.length-1;this.survey={};let a,n,r="string"==typeof e.content.texts;this.survey.enable=1==e.survey.enable&&"string"==typeof e.survey.config,r&&(i++,t.push(e.content.texts),a=i),1==this.survey.enable&&(i++,t.push(e.survey.config),n=i),async function(e){try{const t=e.map((async e=>{const t=await fetch(e,{headers:{"Cache-Control":"no-cache"}});if(!t.ok)throw new Error(`Error fetching json file: ${e}`);if(e.endsWith(".json"))return t.json();if(e.endsWith(".csv")){return function(e){const t=e.split("\n"),s=t[0].split(",").map((e=>e.trim().replace(/^"|"$/g,"")));return t.slice(1).map((e=>{let t=[],i="",a=!1;for(let s=0;s<e.length;s++){let n=e[s];'"'!==n||a?'"'===n&&a?s+1<e.length&&'"'===e[s+1]?(i+='"',s++):a=!1:","!==n||a?i+=n:(t.push(i.trim().replace(/^"|"$/g,"")),i=""):a=!0}return t.push(i.trim().replace(/^"|"$/g,"")),s.reduce(((e,s,i)=>(e[s]=t[i],e)),{})}))}(await t.text())}}));return await Promise.all(t)}catch(e){throw console.error("Error fetching one or more files",e),e}}(t).then((async t=>{const i={bgData:t[0],tgData:t[1],texts:r?t[a]:e.content.texts,surveyConfig:1==this.survey.enable?t[n]:null};this.texts=i.texts,this.surveyConfig=i.surveyConfig,this.bgData=i.bgData,this.tgData=i.tgData,this.bgImgDir=e.gameplay.config.backgrounds.imagesDir,this.tgImgDir=e.gameplay.config.targets.imagesDir,this.preloadedBackgrounds=null,this.preloadedForgrounds=null,this.tgGroupingField=e.gameplay.config.targets.groupingField,this.bgGroupingField=e.gameplay.config.backgrounds.groupingField,this.slideCount=e.gameplay.config.slides.count,this.slideDurationSeconds=e.gameplay.config.slides.durationSeconds,this.enablePreparationScreen=e.gameplay.preparationScreen.enable,this.slidePreparationTimeSeconds=e.gameplay.config.slides.preparationTimeSeconds,this.targetHitDetectionRadius=e.gameplay.config.targets.detectionRadius,this.enableShowTargetPosition=e.gameplay.config.slides.showTargetPosition.enable,this.showTargetPositionTimeSeconds=e.gameplay.config.slides.showTargetPosition.timeSeconds,this.apiServicePath=e.api.endpoints.post,this.session=null,this.state={currentScreen:null,currentSlideIndex:-1,nextSlideIndex:0,currentTimerId:null,currentSlideTimestamp:null,enableSlideCounter:e.gameplay.slideCounter.enable,device:{orientation:null,pixelDensity:null,screenWidth:null,screenHeight:null,screenAspectRatio:null}};const o=navigator.language||navigator.userLanguage;this.browserLang=o;const l=Object.keys(this.texts.gameLangs);let h=e.content.defaultLang;for(const e of l)if(this.browserLang.startsWith(e)){h=e;break}this.lang=h;const d=`\n                    <div id="loadingScreen" class="game-screen">\n                        <div class="loading-screen-content">\n                            <div class="loading-screen-icon"></div>\n                            <p>${i.texts.loadingText[this.lang]}</p>\n                        </div>\n                    </div>\n                `,c=document.createElement("div");c.innerHTML=d,e.gameplay.loadingScreen.element=c.firstElementChild,e.loadingScreen?.element||document.body.appendChild(e.gameplay.loadingScreen.element),this.screens={openingScreen:document.getElementById(e.opening.element),gameplayScreen:document.getElementById(e.gameplay.element),resultsScreen:document.getElementById(e.results.element)},"string"==typeof e.gameplay.loadingScreen.element?this.screens.loadingScreen=document.getElementById(e.gameplay.loadingScreen.element):"object"==typeof e.gameplay.loadingScreen.element&&(this.screens.loadingScreen=e.gameplay.loadingScreen.element),this.instructions=e.instructions,1==this.survey.enable&&(this.screens.surveyScreen=document.getElementById(e.survey.element)),1==this.instructions.enable&&(this.screens.instructionsScreen=document.getElementById(e.instructions.element)),this.gameCanvas={element:document.getElementById(e.gameplay.canvas.element),originalWidth:e.gameplay.canvas.width,originalHeight:e.gameplay.canvas.height,actualWidth:null,actualHeight:null,resizedWidth:null,resizedHeight:null},this.slideCounterId=e.gameplay.slideCounter.element,this.gameCanvas.aspectRatio=this.gameCanvas.originalWidth/this.gameCanvas.originalHeight,1==this.instructions.enable&&(this.searchImagesCanvas={element:document.getElementById(e.instructions.searchImages.canvas.element),dimensions:[e.instructions.searchImages.canvas.width,e.instructions.searchImages.canvas.height],nColumns:e.instructions.searchImages.columns}),this.gameStats={config:e.results.stats,container:document.getElementById(e.results.stats.element),mainResult:e.results.stats.mainResult.path,mainResultElement:document.getElementById(e.results.stats.mainResult.element)},this.buttons={userConsentButton:document.getElementById(e.userConsentButton),startGameButton:document.getElementById(e.gameplay.startGameButton),backToStartButton:document.getElementById(e.gameplay.backToStartButton)},this.enableSound=e.theme.sound.enable,this.enableSound&&(this.hitSound=new Audio(e.theme.sound.hit),this.hitSound.load(),this.missSound=new Audio(e.theme.sound.miss),this.missSound.load()),this.targetHitColor=e.theme.color.targetHit,this.targetMissColor=e.theme.color.targetMiss,this.surveySubmitEvent=new Event("surveySubmit"),this.setData(),console.log(this),1==this.survey.enable&&(this.survey=new s({config:this.surveyConfig,session:this.session,containerId:e.survey.formContainer,submitEvent:this.surveySubmitEvent,texts:this.texts,lang:this.lang,apiServicePath:this.apiServicePath})),this.setupEventListeners(),this.state.currentScreen="openingScreen",this.showScreen("openingScreen"),document.body.style.display="block"}))}.bind(this))}checkRequiredProps(e,t){for(const s of t){const t=s.split(".");let i=e;for(const e of t){if(!i||!i.hasOwnProperty(e))throw new Error(`Missing required configuration: ${s}`);i=i[e]}}}deepMerge(e,t){for(const s in t)t[s]instanceof Object&&s in e&&Object.assign(t[s],this.deepMerge(e[s],t[s]));return Object.assign(e||{},t),e}async preloadImagesAsync(e){for(const t of e)await new Promise(((e,s)=>{const i=new Image;i.src=t,i.onload=e,i.onerror=s}))}setData(){const s=this.randomizeData(this.bgData,this.config.gameplay.config.slides.count,!1,!1,!1,this.bgGroupingField,!1,null),i=this.randomizeData(this.tgData,this.config.gameplay.config.slides.count,!0,!1,!0,this.tgGroupingField,s,this.bgGroupingField),a=this.tgData.map(function(e){return e[this.tgGroupingField]}.bind(this));let n=[...new Set(a)];this.targetGroupsLength=n.length;const r=this.randomizeData(i,this.targetGroupsLength,!1,!1,!0,this.tgGroupingField,!1,null);this.session=new t({backgrounds:s,targets:i,slideCount:this.config.gameplay.config.slides.count,searchImages:r,tgGroupingField:this.tgGroupingField,bgGroupingField:this.bgGroupingField}),this.measureScreen(),this.computeGameDimensions(),this.session.initialCanvasWidth=this.gameCanvas.resizedWidth,this.session.initialCanvasHeight=this.gameCanvas.resizedHeight,this.slideCounter=new e({state:this.state,container:document.getElementById(this.slideCounterId),slideCount:this.config.gameplay.config.slides.count,slideDurationSeconds:this.slideDurationSeconds,canvas:this.gameCanvas,session:this.session}),this.session.lang=this.lang,this.session.browserLang=this.browserLang,this.session.backgrounds.forEach(function(e,t){this.session.results[t].backgroundFilename=e.filename,this.session.results[t].backgroundIndex=e.originalIndex,this.session.results[t]["background_"+this.bgGroupingField]=e[this.bgGroupingField],"pt"==this.lang&&e[this.bgGroupingField+"_pt"]&&(this.session.results[t]["background_"+this.bgGroupingField+"_label"]=e[this.bgGroupingField+"_pt"]),"en"==this.lang&&e[this.bgGroupingField+"_en"]&&(this.session.results[t]["background_"+this.bgGroupingField+"_label"]=e[this.bgGroupingField+"_en"])}.bind(this)),this.session.targets.forEach(function(e,t){this.session.results[t].targetFilename=e.filename,this.session.results[t].targetIndex=e.originalIndex,this.session.results[t].originalTargetX=e.coordinates[0],this.session.results[t].originalTargetY=e.coordinates[1],this.session.results[t].targetRotation=e.rotation,this.session.results[t]["target_"+this.tgGroupingField]=e[this.tgGroupingField],"pt"==this.lang&&e[this.tgGroupingField+"_pt"]&&(this.session.results[t]["target_"+this.tgGroupingField+"_label"]=e[this.tgGroupingField+"_pt"]),"en"==this.lang&&e[this.tgGroupingField+"_en"]&&(this.session.results[t]["target_"+this.tgGroupingField+"_label"]=e[this.tgGroupingField+"_en"])}.bind(this)),this.searchImgSources=this.session.searchImages.map(function(e,t){return this.tgImgDir+"/"+this.session.searchImages[t].filename}.bind(this)),this.searchPromises=[]}async setupEventListeners(){this.buttons.userConsentButton.addEventListener("click",(async()=>{0==this.survey.enable&&0==this.instructions.enable?this.startGamePlay():(this.survey instanceof s&&(this.showScreen("surveyScreen"),this.state.currentScreen="surveyScreen"),this.preloadedSearchImgs=await this.preloadImages(this.searchImgSources,this.searchPromises),console.log("preloaded search images"),0==this.survey.enable&&1==this.instructions.enable&&(this.showScreen("loadingScreen"),this.showScreen("instructionsScreen"),this.state.currentScreen="instructionsScreen",this.renderSearchImages()))})),this.buttons.startGameButton.addEventListener("click",(()=>{"instructionsScreen"==this.state.currentScreen&&this.startGamePlay()})),this.buttons.backToStartButton.addEventListener("click",(()=>{window.location.reload()})),this.gameCanvas.element.addEventListener("click",(e=>{this.handleCanvasClick(e)})),window.addEventListener("orientationchange",(()=>{this.measureScreen()})),window.addEventListener("resize",this.debounce(function(e){this.measureScreen(),this.computeGameDimensions(),this.resizeGame();let t={session:this.session.id,timestamp:this.getFormattedDate(),resizedTargetX:null,resizedTargetY:null,resizedCanvasWidth:this.gameCanvas.resizedWidth,resizedCanvasHeight:this.gameCanvas.resizedHeight,clickX:null,clickY:null,slideIndex:this.state.currentSlideIndex||-1,type:"resize",hitTarget:null,screenWidth:this.state.device.screenWidth,screenHeight:this.state.device.screenHeight,pixelDensity:this.state.device.pixelDensity,screenOrientation:this.state.device.orientation};this.session.events.push(t)}.bind(this),200)),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",(()=>{this.measureScreen()})),window.matchMedia("(forced-colors: active)").addEventListener("change",(()=>{this.measureScreen()})),window.addEventListener("wheel",this.debounce(function(e){e.ctrlKey}.bind(this),200)),window.addEventListener("wheel",(e=>{const{ctrlKey:t}=e;t&&e.preventDefault()}),{passive:!1}),window.addEventListener("surveySubmit",(async e=>{1==this.instructions.enable?(this.showScreen("loadingScreen"),this.preloadedSearchImgs=await this.preloadImages(this.searchImgSources,this.searchPromises),this.showScreen("instructionsScreen"),this.state.currentScreen="instructionsScreen",this.renderSearchImages()):this.startGamePlay()}))}measureScreen(){this.state.device.orientation=window.screen.orientation?window.screen.orientation.type:"unknown",this.state.device.pixelDensity=window.devicePixelRatio||1,this.state.device.screenWidth=window.innerWidth,this.state.device.screenHeight=window.innerHeight,this.state.device.screenAspectRatio=this.state.device.screenWidth/this.state.device.screenHeight}showScreen(e){Object.values(this.screens).forEach((e=>e.classList.remove("active"))),this.screens[e].classList.add("active")}computeGameDimensions(){this.gameCanvas.aspectRatio>=this.state.device.screenAspectRatio&&(this.gameCanvas.resizedWidth=this.state.device.screenWidth,this.gameCanvas.resizedHeight=this.gameCanvas.resizedWidth/this.gameCanvas.aspectRatio),this.gameCanvas.aspectRatio<this.state.device.screenAspectRatio&&(this.gameCanvas.resizedHeight=this.state.device.screenHeight-32,this.gameCanvas.resizedWidth=this.gameCanvas.resizedHeight*this.gameCanvas.aspectRatio),this.resizedTargetHitDetectionRadius=this.remapToRange(this.targetHitDetectionRadius,0,this.gameCanvas.originalHeight,0,this.gameCanvas.resizedHeight),this.gameCanvas.actualWidth=this.gameCanvas.resizedWidth*this.state.device.pixelDensity,this.gameCanvas.actualHeight=this.gameCanvas.resizedHeight*this.state.device.pixelDensity}resizeGame(){null!==this.preloadedBackgrounds&&(this.resizeCanvas(),this.renderImages(),this.slideCounter.resize()),"instructionsScreen"==this.state.currentScreen&&this.renderSearchImages()}resizeCanvas(){const e=this.gameCanvas.element.getContext("2d");this.gameCanvas.element.style.width=this.gameCanvas.resizedWidth+"px",this.gameCanvas.element.style.height=this.gameCanvas.resizedHeight+"px",e.scale(this.state.device.pixelDensity,this.state.device.pixelDensity),this.gameCanvas.element.width=this.gameCanvas.actualWidth,this.gameCanvas.element.height=this.gameCanvas.actualHeight}startGamePlay(){(async()=>{this.state.currentScreen="loadingScreen",this.showScreen("loadingScreen"),this.resizeCanvas(),this.slideCounter.resize(),this.slideCounter.render(),this.state.currentSlideIndex=0,this.prepareNextSlide()})()}debounce(e,t){let s;return function(i){s&&clearTimeout(s),s=setTimeout((()=>e(i)),t)}}groupArray(e,t){return e.reduce(((e,s,i)=>{const a=s[t],n=e.find((e=>e.group===a)),r={...s,originalIndex:i};if(n)n.items.push(r);else{let i={group:a,items:[r]};s[t+"_"+this.lang]&&(i.label=s[t+"_"+this.lang]),e.push(i)}return e}),[])}divideWithRemainder(e,t){return{quotient:Math.floor(e/t),remainder:e%t}}randomizeData(e,t,s,i,a,n,r,o){let l,h=e.length;if(null!=n&&("string"==typeof n||n instanceof String)){let h,d,c=this.groupArray(e,n),g=c.length,u=this.divideWithRemainder(t,g),m=u.quotient,p=this.createShuffledArray(g,u.remainder),f=u.remainder>0?m+1:m,v=c.map(function(e,t){e.items.length<f&&(alert("Dataset in "+e.group+" group is not large enough. The group was supposed to be at least "+f+" items long."),console.log("Dataset in "+e.group+" group is not large enough. The group was supposed to be at least "+f+" items long."));let n=e.items.length,r=p.includes(t)?m+1:m,o=this.createShuffledArray(n,r).map(function(t){let n={};return s&&(n.coordinates=!1!==i?[Math.floor(Math.random()*(i[0]-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius,Math.floor(Math.random()*(i[1]-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius]:[Math.floor(Math.random()*(this.gameCanvas.originalWidth-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius,Math.floor(Math.random()*(this.gameCanvas.originalHeight-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius]),a&&(n.rotation=Math.floor(360*Math.random())+1),{...e.items[t],...n}}.bind(this));return o}.bind(this));if(r&&(h=this.groupArray(r,o),d=h.length*v.length),!r||t<d)t<d&&r&&console.log("sample size is not large enough to match targets and background groups"),l=v.flat().map(function(e){let t={};return s&&(t.coordinates=!1!==i?[Math.floor(Math.random()*(i[0]-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius,Math.floor(Math.random()*(i[1]-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius]:[Math.floor(Math.random()*(this.gameCanvas.originalWidth-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius,Math.floor(Math.random()*(this.gameCanvas.originalHeight-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius]),a&&(t.rotation=Math.floor(360*Math.random())+1),{...e,...t}}.bind(this)),l=this.shuffleArray(l);else{let e=[];h.map(function(t){let s=t.items.length,i=[],a=[];for(let e=0;e<s;e++){let s=c[e].items.length;if("number"!=typeof s||s<=0)console.log("group "+n+" must have at least 1 item");else{const n=Math.floor(Math.random()*s);let r={...c[e].items[n]};a.push(t.items[e].originalIndex),i.push(r),c[e].items.splice(n,1)}}let r=this.shuffleArray(i),o=this.shuffleArray(a);r.forEach((function(e,t){e.reorderingIndex=o[t]})),e.push(...r)}.bind(this));let t=[];for(let s=0;s<e.length;s++){let i=e.filter((function(e){return e.reorderingIndex==s}))[0];delete i.reorderingIndex,i.coordinates=[Math.floor(Math.random()*(this.gameCanvas.originalWidth-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius,Math.floor(Math.random()*(this.gameCanvas.originalHeight-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius],i.rotation=Math.floor(360*Math.random())+1,t.push(i)}l=t}}else{l=this.createShuffledArray(h,t).map(function(t){const s=[Math.floor(Math.random()*(this.gameCanvas.originalWidth-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius,Math.floor(Math.random()*(this.gameCanvas.originalHeight-2*this.targetHitDetectionRadius))+this.targetHitDetectionRadius],i=Math.floor(360*Math.random())+1;return{...e[t],randomizedIndex:t,coordinates:s,rotation:i}}.bind(this)),l=this.shuffleArray(l)}return l}createShuffledArray(e,t){const s=Array.from({length:e},((e,t)=>t));for(let e=s.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[s[e],s[t]]=[s[t],s[e]]}return s.slice(0,t)}shuffleArray(e){for(let t=e.length-1;t>0;t--){const s=Math.floor(Math.random()*(t+1));[e[t],e[s]]=[e[s],e[t]]}return e}renderSearchImages(){const e=this.searchImagesCanvas.element.getContext("2d");this.searchImagesCanvas.element.style.width="100%",this.searchImagesCanvas.element.style.height=this.searchImagesCanvas.dimensions[1];let t=this.searchImagesCanvas.element.getBoundingClientRect().width,s=this.searchImagesCanvas.element.getBoundingClientRect().height;this.searchImagesCanvas.actualWidth=t*this.state.device.pixelDensity,this.searchImagesCanvas.actualHeight=s*this.state.device.pixelDensity,this.searchImagesCanvas.element.width=this.searchImagesCanvas.actualWidth,this.searchImagesCanvas.element.height=this.searchImagesCanvas.actualHeight,e.scale(this.state.device.pixelDensity,this.state.device.pixelDensity);let i=Math.ceil(this.targetGroupsLength/this.searchImagesCanvas.nColumns),a=t/this.searchImagesCanvas.nColumns,n=s/i,r=[],o=0,l=0;for(;o<this.targetGroupsLength;){for(let e=0;e<this.searchImagesCanvas.nColumns&&!(o>=this.targetGroupsLength);e++){let t=[Math.ceil(e*a+a/2),Math.ceil(l*n+n/2)];r.push(t),o++}l++}this.preloadedSearchImgs.forEach(function(t,s){e.save(),e.translate(r[s][0],r[s][1]);const i=this.session.searchImages[s].rotation*Math.PI/180;e.rotate(i),e.drawImage(t,-this.resizedTargetHitDetectionRadius,-this.resizedTargetHitDetectionRadius,2*this.resizedTargetHitDetectionRadius,2*this.resizedTargetHitDetectionRadius),e.restore()}.bind(this));const h=this.bgData,d=this.tgData,c=this.bgImgDir,g=this.tgImgDir,u=this.session.backgrounds.map((function(e){return c+"/"+h[e.originalIndex].filename}));this.bgSources=u;const m=this.session.targets.map((function(e){return g+"/"+d[e.originalIndex].filename}));this.tgSources=m,this.tgPromises=Array(this.tgSources.length).fill(null).map((()=>this.createPendingPromise())),this.bgPromises=Array(this.bgSources.length).fill(null).map((()=>this.createPendingPromise())),this.preloadedBackgrounds=[],this.preloadedTargets=[],this.backgroundPreloadImages(this.bgSources,this.bgPromises),this.backgroundPreloadImages(this.tgSources,this.tgPromises),console.log("started preloading the ingame images")}async showTargetPosition(){this.state.currentScreen="showingTargetPosition";let e=this.remapToRange(this.session.results[this.state.currentSlideIndex].originalTargetX,0,this.gameCanvas.originalWidth,0,this.gameCanvas.resizedWidth),t=this.remapToRange(this.session.results[this.state.currentSlideIndex].originalTargetY,0,this.gameCanvas.originalWidth,0,this.gameCanvas.resizedWidth);const s=this.gameCanvas.element.getContext("2d");s.save(),s.translate(e*this.state.device.pixelDensity,t*this.state.device.pixelDensity),s.lineWidth=2,s.strokeStyle=this.session.results[this.state.currentSlideIndex].hitTarget?this.targetHitColor:this.targetMissColor,this.enableSound&&this.session.results[this.state.currentSlideIndex].hitTarget&&this.hitSound.play(),s.beginPath(),s.arc(0,0,this.resizedTargetHitDetectionRadius*this.state.device.pixelDensity,0,2*Math.PI),s.stroke(),s.restore(),await new Promise((e=>setTimeout(e,1e3*this.showTargetPositionTimeSeconds)))}async prepareNextSlide(){this.state.currentScreen="slidePreparation";const e=performance.now(),t=this.bgPromises[this.state.nextSlideIndex],s=t.getState(),i=this.tgPromises[this.state.nextSlideIndex],a=i.getState();let n,r;if("fulfilled"===a)r=await i.promise;else if("pending"===a){console.log("Target image still not loaded. Waiting...");try{r=await i.promise,console.log("img finally loaded")}catch(e){console.error("Failed to load image:",e),r=null}}if("fulfilled"===s)n=await t.promise;else if("pending"===s){console.log("img not loaded, waiting...");try{n=await t.promise,console.log("img finally loaded")}catch(e){console.error("Failed to load image:",e),n=null}}const o=performance.now()-e;this.preloadedBackgrounds.push(n),this.preloadedTargets.push(r);const l=1e3*this.slidePreparationTimeSeconds,h=Math.max(l-o,0);this.enablePreparationScreen?setTimeout((()=>{this.renderNextSlide()}),h):this.renderNextSlide()}async renderNextSlide(){0==this.state.nextSlideIndex&&this.showScreen("gameplayScreen"),this.state.currentScreen="slide",this.state.currentSlideTimestamp=Date.now(),null!==this.preloadedBackgrounds[this.state.nextSlideIndex]&&void 0!==this.preloadedBackgrounds[this.state.nextSlideIndex]&&null!==this.preloadedTargets[this.state.nextSlideIndex]&&void 0!==this.preloadedTargets[this.state.nextSlideIndex]?(this.renderImages(),this.session.results[this.state.currentSlideIndex].startTimestamp=this.getFormattedDate()):(this.session.results[this.state.currentSlideIndex].startTimestamp=null,this.clearSlide()),this.slideCounter.update(),this.state.currentTimerId=setTimeout((async()=>{null!==this.preloadedBackgrounds[this.state.nextSlideIndex]&&void 0!==this.preloadedBackgrounds[this.state.nextSlideIndex]&&null!==this.preloadedTargets[this.state.nextSlideIndex]&&void 0!==this.preloadedTargets[this.state.nextSlideIndex]?(this.session.results[this.state.currentSlideIndex].timing=1e3*this.slideDurationSeconds,this.session.results[this.state.currentSlideIndex].endTimestamp=this.getFormattedDate(),await this.showTargetPosition()):(this.session.results[this.state.currentSlideIndex].timing=null,this.session.results[this.state.currentSlideIndex].endTimestamp=null),this.state.currentSlideIndex=this.state.currentSlideIndex+1,this.state.nextSlideIndex=this.state.nextSlideIndex+1,this.state.nextSlideIndex>=this.config.gameplay.config.slides.count?this.finishGame():this.prepareNextSlide()}),1e3*this.slideDurationSeconds)}preloadImage(e){return new Promise(((t,s)=>{const i=new Image;i.onload=()=>t(i),i.onerror=e=>s(e),i.src=e}))}createPendingPromise(){let e,t,s="pending";return{promise:new Promise(((i,a)=>{e=e=>{s="fulfilled",i(e)},t=e=>{s="failed",a(e)}})),resolvePromise:e,rejectPromise:t,getState:()=>s}}async backgroundPreloadImages(e,t){for(let s=0;s<e.length;s++){const i=e[s];try{const e=await this.preloadImage(i);t[s].resolvePromise(e)}catch(e){console.error(`Error loading image ${i}:`,e),t[s].rejectPromise("failed")}}}async preloadImages(e,t){try{return t=e.map((e=>this.preloadImage(e))),await Promise.all(t)}catch(e){console.error("Error loading images:",e)}}clearSlide(){this.gameCanvas.element.getContext("2d").clearRect(0,0,this.gameCanvas.actualWidth,this.gameCanvas.actualHeight)}renderImages(){const e=this.state.nextSlideIndex,t=this.preloadedBackgrounds[e],s=this.preloadedTargets[e],i=this.gameCanvas.element,a=this.session,n=i.getContext("2d");n.clearRect(0,0,this.gameCanvas.actualWidth,this.gameCanvas.actualHeight),n.drawImage(t,0,0,i.width,i.height);const r=a.targets[e].rotation*Math.PI/180,o=a.targets[e].coordinates;n.save();let l=[this.remapToRange(o[0],0,this.gameCanvas.originalWidth,0,this.gameCanvas.actualWidth),this.remapToRange(o[1],0,this.gameCanvas.originalHeight,0,this.gameCanvas.actualHeight)];n.translate(l[0],l[1]),n.rotate(r);const h=2*this.resizedTargetHitDetectionRadius;n.drawImage(s,-this.resizedTargetHitDetectionRadius*this.state.device.pixelDensity,-this.resizedTargetHitDetectionRadius*this.state.device.pixelDensity,h*this.state.device.pixelDensity,h*this.state.device.pixelDensity),n.restore()}async handleCanvasClick(e){const t=this.gameCanvas.element.getBoundingClientRect(),s=t.left,i=t.top;if("slide"==this.state.currentScreen){this.session.results[this.state.currentSlideIndex].timing=Date.now()-this.state.currentSlideTimestamp;let t=e.clientX-s,a=e.clientY-i,n=this.session.targets[this.state.currentSlideIndex].coordinates,r=this.remapToRange(n[0],0,this.gameCanvas.originalWidth,0,this.gameCanvas.resizedWidth),o=this.remapToRange(n[1],0,this.gameCanvas.originalHeight,0,this.gameCanvas.resizedHeight),l=this.calculateDistance(t,a,r,o)<this.resizedTargetHitDetectionRadius,h={session:this.session.id,timestamp:this.getFormattedDate(),resizedTargetX:r,resizedTargetY:o,resizedCanvasWidth:this.gameCanvas.resizedWidth,resizedCanvasHeight:this.gameCanvas.resizedHeight,clickX:t,clickY:a,slideIndex:this.state.currentSlideIndex,type:"click",hitTarget:l,screenWidth:this.state.device.screenWidth,screenHeight:this.state.device.screenHeight,pixelDensity:this.state.device.pixelDensity,screenOrientation:this.state.device.orientation};this.session.events.push(h),l&&(this.session.results[this.state.currentSlideIndex].hitTarget=!0,this.session.results[this.state.currentSlideIndex].endTimestamp=this.getFormattedDate(),clearTimeout(this.state.currentTimerId),await this.showTargetPosition(),this.state.currentSlideIndex=this.state.currentSlideIndex+1,this.state.nextSlideIndex=this.state.nextSlideIndex+1),this.enableSound&&!l&&(this.missSound.paused?this.missSound.play():this.missSound.currentTime=0);let d=this.state.nextSlideIndex>=this.config.gameplay.config.slides.count;l&&!d&&this.prepareNextSlide(),l&&d&&this.finishGame()}}remapToRange(e,t,s,i,a){return i+(e-t)*(a-i)/(s-t)}calculateDistance(e,t,s,i){const a=s-e,n=i-t;return Math.sqrt(a**2+n**2)}computeTotalTiming(){this.session.totalTiming=this.session.results.reduce(((e,t)=>e+t.timing),0)}getFormattedDate(){const e=new Date;return`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")} ${String(e.getHours()).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")}:${String(e.getSeconds()).padStart(2,"0")}`}convertSecondsToMinutes(e,t){let s=Math.floor(e),i=Math.floor(s/60),a=s%60;if(t){return(i>0?`${i}m`:"")+(a>0?`${a}s`:"")}return[i,a]}preProcessData(e){return Array.isArray(e)?e.map((e=>this.preProcessData(e))):null!==e&&"object"==typeof e?Object.keys(e).reduce(((t,s)=>(t[s]=this.preProcessData(e[s]),t)),{}):null===e?"null":!1===e?"false":""===e?"":!0===e?"true":e}evaluateObjectProperties(e){const t={};function s(e){if("object"!=typeof e||null===e)return!0===e;for(const t in e)if(e.hasOwnProperty(t)&&s(e[t]))return!0;return!1}for(const i in e)e.hasOwnProperty(i)&&(t[i]=s(e[i]));return t}finishGame(){this.computeTotalTiming();const e={type:"events",data:this.preProcessData(this.session.events)},t={type:"results",data:this.preProcessData(this.session.results)};let s=this.session.searchImages.map(function(e){let t={...e};return t.session=this.session.id,delete t.coordinates,t}.bind(this));const i={type:"search-images",data:this.preProcessData(s)};let a=[{...this.session.device}];a[0].id=this.session.id,a[0].gameLang=this.session.lang,a[0].browserLang=this.session.browserLang,a[0].initialCanvasWidth=this.session.initialCanvasWidth,a[0].initialCanvasHeight=this.session.initialCanvasHeight;for(let e in this.session)this.session.hasOwnProperty(e)&&e.startsWith("survey_")&&(a[0][e]=this.session[e]);const n={type:"session",data:this.preProcessData(a)};this.submitArray(e,this.apiServicePath),this.submitArray(t,this.apiServicePath),this.submitArray(i,this.apiServicePath),this.submitArray(n,this.apiServicePath),this.printResults(),window.scrollTo(0,0),this.showScreen("resultsScreen"),this.state.currentScreen="resultsScreen"}printResults(){let e=this.evaluateObjectProperties(this.gameStats.config),t=this.session.results.filter((e=>1==e.hitTarget)),s=this.gameStats.mainResult;if(e.slides){let e;if(1==this.gameStats.config.slides.totalTiming){let t=this.session.totalTiming;e=parseFloat((t/1e3).toFixed(1))}if(1==this.gameStats.config.slides.hitRatio){let i,a=t.length,n="slides"==s[0]&&"hitRatio"==s[1],r=n?this.gameStats.mainResultElement:this.gameStats.container,o=n?"span":"p",l=a>1?"s":"",h=a>1?"ões":"ão",d=this.convertSecondsToMinutes(e,!0),c=document.createElement(o),g=document.createElement("div");g.classList.add("result-item");let u=document.createElement("figure");u.classList.add("result-item__figure"),g.appendChild(u);let m=n?r:g;m.appendChild(c),i="pt"==this.session.lang?`Você encontrou ${a} opili${h} (de ${this.config.gameplay.config.slides.count}) em ${d}.`:`You've spotted ${a} harvester${l} (out of ${this.config.gameplay.config.slides.count}) in ${d}.`,c.textContent=i,n||r.appendChild(m)}}if(e.hits){const e=t.reduce(((e,t)=>e+t.timing),0);if(t.length>0&&1==this.gameStats.config.hits.fastestHit){const e=t.reduce(function(e,t){return t.timing<e.timing?t:e}.bind(this),t[0]),i=e.timing/1e3;let a,n="hits"==s[0]&&"fastestTiming"==s[1],r=n?this.gameStats.mainResultElement:this.gameStats.container,o=n?"span":"p",l=i>=2?"s":"",h=document.createElement(o),d=document.createElement("div");d.classList.add("result-item");let c=document.createElement("figure");c.classList.add("result-item__figure");let g=document.createElement("img"),u=this.tgImgDir+"/"+e.targetFilename;g.setAttribute("src",u),c.appendChild(g),d.appendChild(c);let m=n?r:d;m.appendChild(h),a="pt"==this.session.lang?`Seu acerto mais rápido levou ${parseFloat(i.toFixed(1))} segundo${l}.`:`Your fastest hit took ${parseFloat(i.toFixed(1))} second${l}.`,h.textContent=a,n||r.appendChild(m)}if(t.length>0&&1==this.gameStats.config.hits.averageTiming){let i,a=e/t.length/1e3,n="hits"==s[0]&&"averageTiming"==s[1],r=n?this.gameStats.mainResultElement:this.gameStats.container,o=n?"span":"p",l=a>=2?"s":"",h=document.createElement(o),d=document.createElement("div");d.classList.add("result-item");let c=n?r:d;c.appendChild(h),i="pt"==this.session.lang?`Você levou em média ${parseFloat(a.toFixed(1))} segundo${l} para acertar cada alvo.`:`You took an average of ${parseFloat(a.toFixed(1))} second${l} to hit each target.`,h.textContent=i,n||r.appendChild(c)}t.length>0&&this.gameStats.config.hits.totalNumberRelative}if(e.backgrounds){const e="background_"+this.bgGroupingField,i=this.groupArray(t,e);if(i.length>0){if(1==this.gameStats.config.backgrounds.mostFoundGroup){const e=i.reduce((function(e,t){return t.items.length>e.items.length?t:e}),i[0]);let t,a="backgrounds"==s[0]&&"mostFoundGroup"==s[1],n=a?this.gameStats.mainResultElement:this.gameStats.container,r=a?"span":"p",o=e.label?e.label:e.group,l=e.items.length>1?"s":"",h=document.createElement(r),d=document.createElement("div");d.classList.add("result-item");let c=document.createElement("figure");c.classList.add("result-item__figure");let g=document.createElement("img"),u=this.bgImgDir+"/"+e.group+".png";g.setAttribute("src",u),c.appendChild(g),d.appendChild(c);let m=a?n:d;m.appendChild(h),"pt"==this.session.lang?t=`O tipo de fundo mais encontrado foi o de ${o} (${e.items.length} acerto${l}).`:h=`The most found background type was ${o} (${e.items.length} hit${l}).`,h.textContent=t,a||n.appendChild(m)}if(1==this.gameStats.config.backgrounds.smallestAverageHitTimingGroup){const e=i.map((function(e){const t=e.items.reduce(((e,t)=>e+t.timing),0);let s={group:e.group,averageTimingSeconds:t/e.items.length/1e3};return e.items[0].background_type_label&&(s.label=e.items[0].background_type_label),s})),t=e.reduce(function(e,t){return t.averageTiming<e.averageTiming?t:e}.bind(this),e[0]);let a,n="backgrounds"==s[0]&&"smallestAverageHitTimingGroup"==s[1],r=n?this.gameStats.mainResultElement:this.gameStats.container,o=n?"span":"p",l=t.label?t.label:t.group,h=t.averageTimingSeconds>=2?"s":"",d=document.createElement(o),c=document.createElement("div");c.classList.add("result-item");let g=document.createElement("figure");g.classList.add("result-item__figure");let u=document.createElement("img"),m=this.bgImgDir+"/"+t.group+".png";u.setAttribute("src",m),g.appendChild(u),c.appendChild(g);let p=n?r:c;p.appendChild(d),a="pt"==this.session.lang?`O tipo de fundo com o menor tempo médio de acerto foi o de ${l} (${parseFloat(t.averageTimingSeconds.toFixed(1))} segundo${h}).`:`The background type with smallest average hit time was ${l} (${parseFloat(t.averageTimingSeconds.toFixed(1))} second${h}).`,d.textContent=a,n||r.appendChild(p)}}}if(e.targets){let e="target_"+this.tgGroupingField;1==this.gameStats.config.targets.smallestAverageHitTimingGroup&&this.groupArray(t,e)}this.session.results.filter((function(e){return 1==e.hitTarget}))}async submitArray(e,t){try{const s=JSON.stringify(e),i=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:s});if(!i.ok)throw new Error("Failed to submit array");await i.text();console.log(i)}catch(e){console.error("Error submitting array:",e)}}resetGame(){this.setData(),this.survey=new s({config:this.surveyConfig,session:this.session,containerId:surveyContainerId,submitEvent:this.surveySubmitEvent,texts:this.texts,lang:this.lang,apiServicePath:this.apiServicePath}),this.state.currentSlideIndex=-1,this.state.nextSlideIndex=0,this.state.currentTimerId=null,this.state.currentSlideTimestamp=null,this.gameStats.container.innerHTML="",this.gameStats.mainResultElement.innerHTML="",this.state.currentScreen="openingScreen"}}}));
